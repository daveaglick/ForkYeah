@using ForkYeah.Models.Default;

@model Index

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=Edge" />
    <meta http-equiv="PRAGMA" content="NO-CACHE">

    <title>Fork Yeah!</title>
    <meta name="description" content="Find undiscovered open source projects." />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    
    <link rel="shortcut icon" href="/favicon.ico" type="image/x-icon">
    <link rel="icon" href="/favicon.ico" type="image/x-icon">

    <link href="@Links.Content.bootstrap.bootstrap_less" rel="stylesheet">
    <link href="@Links.Content.bootstrap.theme_less" rel="stylesheet" />
    <link href="@Links.Content.octicons.octicons_css" rel="stylesheet">
    <link href="@Links.Content.github_markdown_css" rel="stylesheet">
    <link href="@Links.Content.master_less" rel="stylesheet">

    <script src="@Links.Scripts.jquery_2_1_3_min_js"></script>
    <script src="@Links.Scripts.bootstrap_min_js"></script>
    <script src="@Links.Scripts.jquery_nicescroll_min_js"></script>
    <script src="@Links.Scripts.cookies_js"></script>
    <script src="//ajax.googleapis.com/ajax/libs/webfont/1.4.7/webfont.js"></script>
    <script>
        WebFont.load({
            google: {
                families: ['Montserrat:400,700:latin']
            }
        });
    </script>
</head>
<body>
    @using (var navbar = Bs.Navbar("FORK YEAH!").SetInverse().SetFluid().SetPosition(NavbarPosition.FixedTop).Begin())
    {
        using (navbar.NavbarCollapse().Begin())
        {
            using (navbar.NavbarNav().SetRight().Begin())
            {
                if (Model.UserLogin != null)
                {
                    using(@navbar.NavbarText().Begin())
                    {
                        @Bs.Image(Model.UserAvatarUrl).AddStyle("height", "20px").AddStyle("margin-right", "6px").SetStyle(ImageStyle.Rounded)
                        @Bs.Link(Model.UserLogin, Model.UserHtmlUrl)
                    }
                }
                @navbar.NavbarButton("Login").SetIcon(Icon.LogIn).SetState(ButtonState.Default).AddCss("login-button").RenderIf(!Model.Authorized)
                @navbar.NavbarButton("Add").SetIcon(Icon.PlusSign).SetState(ButtonState.Success).AddCss("add-button")
                @navbar.NavbarLink("Currently Active").SetVisibility(Visibility.HiddenLg).AddCss("active-link")
                @navbar.NavbarLink("Archive").SetVisibility(Visibility.HiddenLg).AddCss("archive-link")
            }
            using (navbar.NavbarForm().SetRight().SetVisibility(Visibility.HiddenLg).Begin())
            {
                @Bs.Select(null, null, Model.Languages).AddCss("select-language")
            }
        }
    }

    @using (Bs.Div().AddCss("table-div", "full-height").Begin())
    {
        using(Bs.Div().AddCss("table-row", "full-height").Begin())
        {
            // Introduction
            using (Bs.Div().AddCss("table-cell", "full-height").SetId("intro").SetVisibility(Visibility.HiddenMd | Visibility.HiddenSm | Visibility.HiddenXs).Begin())
            {
                using(Bs.Div().AddCss("relative-wrapper").Begin())
                {
                    using(Bs.Div().AddCss("scroll-wrapper").Begin())
                    {                    
                        @Bs.Heading2("Find awesome undiscovered open source projects").AddCss("bottom-margin")

                        @Bs.Button("Login With GitHub").SetIcon(Icon.LogIn).SetState(ButtonState.Default).AddCss("login-button", "bottom-margin").RenderIf(!Model.Authorized)
        
                        @Bs.Button("Add a Project").SetIcon(Icon.PlusSign).SetState(ButtonState.Success).AddCss("add-button", "bottom-margin")

                        @Bs.Element("hr")

                        @Bs.Heading4(Bs.Link("Currently Active " + Bs.Icon(Icon.TriangleRight).ToString()).AddCss("active-link").ToString()).AddCss("text-align-right")
                        @Bs.Paragraph("Vote for your favorites by visiting their GitHub profile and staring the repo!")

                        @Bs.Heading4(Bs.Link("Archive " + Bs.Icon(Icon.TriangleRight).ToString()).AddCss("archive-link").ToString()).AddCss("text-align-right")
                        @Bs.Paragraph("Just because the voting is over doesn't mean these projects don't still rock.")

                        @Bs.Element("hr")

                        using (@Bs.Div().AddCss("bottom-margin").Begin())
                        {
                            @Bs.Paragraph("Filter by language:")
                            using (Bs.Heading4().Begin())
                            {
                                @Bs.Select(null, null, Model.Languages).AddCss("select-language")
                            }
                        }
                    }
                }
            }
            
            // Repositories
            using (Bs.Div().AddCss("table-cell", "full-height").SetId("list").Begin())
            {
            }
            
            // Content
            using (Bs.Div().AddCss("table-cell", "full-height").SetId("content").SetVisibility(Visibility.HiddenMd | Visibility.HiddenSm | Visibility.HiddenXs).Begin())
            {
            }
        }
    }

    <script>
        $(document).ready(function () {
            afterSuccess();

            $('#navbar-collapse').collapse({ 'toggle': false });

            var languageFilter = docCookies.getItem("language");
            if (languageFilter != null) {
                $(".select-language").val(languageFilter);
            }

            // Initially load the active list and whatever happens to be in the address bar for the content
            var activeAction = "@(Url.Action(MVC.Default.Active()))";
            $("#list").load(activeAction, {});
            $("#content").load(document.location.pathname, {});

            history.pushState({}, null, document.location.pathname);

            resizeNavbar();
        });

        $(window).resize(function () {
            resizeNavbar();
        });

        function resizeNavbar() {
            if (window.innerWidth < 1200) {
                $(".navbar").removeClass("@(Css.NavbarFixedTop)");
                $(".navbar").addClass("@(Css.NavbarStaticTop)");
            } else {
                $(".navbar").removeClass("@(Css.NavbarStaticTop)");
                $(".navbar").addClass("@(Css.NavbarFixedTop)");
            }
        }

        $(document).ajaxSend(function () {
            document.title = 'Fork Yeah!';
            $("#navbar-collapse").collapse('hide');
            hideContent();
        });

        $(document).ajaxSuccess(function () {
            afterSuccess();

            // Make sure we hide the content for root requests (since the content view will show it when loaded)
            if (document.location.pathname == "/") {
                hideContent();
            }
        });

        $(document).ajaxError(function (event, jqxhr, settings, thrownError) {
            if (jqxhr.status == 404) {
                $("#content").load("/Content/404.html");
            } else {
                $("#content").load("/Content/500.html");
            }
        });

        // Common behavior for document ready and after Ajax calls
        function afterSuccess() {
            $(".scroll-wrapper").niceScroll();
        }

        $(".login-button").click(function () {
            var authAction = "@(Url.Action(MVC.Default.Auth()))";
            window.location.href = authAction;
            return false;
        });

        $(".add-button").click(function () {
            var addAction = "@(Url.Action(MVC.Default.Add()))";
            $("#content").load(addAction, {});
            history.pushState({}, null, addAction);
            return false;
        });

        $(".active-link").click(function () {
            var activeAction = "@(Url.Action(MVC.Default.Active()))";
            $("#list").load(activeAction, {});
            return false;
        });

        $(".archive-link").click(function () {
            var archiveAction = "@(Url.Action(MVC.Default.Archive()))";
            $("#list").load(archiveAction, {});
            return false;
        });

        var changingLanguageFilter = false;
        $(".select-language").change(function () {
            if (changingLanguageFilter == false) {
                changingLanguageFilter = true;
                var languageFilter = $(this).val();
                if (languageFilter == "") {
                    docCookies.removeItem("language", "/");
                } else {
                    docCookies.setItem("language", languageFilter, null, "/")
                }
                var activeAction = "@(Url.Action(MVC.Default.Active()))";
                $("#list").load(activeAction, {});
                $(".select-language").val(languageFilter);
                changingLanguageFilter = false;
            }
        });

        window.onpopstate = function (event) {
            if (event.state == null) {
                return;
            }
            $("#content").load(document.location.pathname, {});
        };

        function showContent() {
            $("#list").addClass("@(Css.HiddenMd) @(Css.HiddenSm) @(Css.HiddenXs)");
            $("#content").removeClass("@(Css.HiddenMd) @(Css.HiddenSm) @(Css.HiddenXs)");
        }

        function hideContent() {
            $("#content").addClass("@(Css.HiddenMd) @(Css.HiddenSm) @(Css.HiddenXs)");
            $("#list").removeClass("@(Css.HiddenMd) @(Css.HiddenSm) @(Css.HiddenXs)");
        }
    </script>
 </body>
</html>