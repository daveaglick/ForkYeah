@using ForkYeah.Models.Default;

@model RepositoryDetails

@using(Bs.Div().AddCss("table-div", "full-height").Begin())
{
    using (Bs.Div().AddCss("table-row").Begin())
    {
        using (Bs.Div().AddCss("table-cell").Begin())
        {
            using (Bs.Div().AddCss("content-header").Begin())
            {
                using (Bs.Heading2(Model.Name).Begin())
                {
                    using(Bs.Small().Begin())
                    {
                        <text>@Bs.Link(Model.Owner, Model.OwnerHtmlUrl)/@Bs.Link(Model.Name, Model.HtmlUrl)</text>
                        if(!string.IsNullOrWhiteSpace(Model.Homepage))
                        {
                            <text> (@Bs.Link(Model.Homepage, Model.Homepage))</text>
                        }
                    }
                }
                using(Bs.Paragraph().Begin())
                {
                    <text>
                        @if(!string.IsNullOrWhiteSpace(Model.Language))
                        {
                            @Bs.Strong(Bs.Badge(Model.Language).ToString())
                        }
                        @Bs.Span().AddCss("octicon", "octicon-star") @Model.StargazersCount Stars (+@Model.StargazersCountChange.ToString("+0;-0;0")) /
                        @Bs.Span().AddCss("octicon", "octicon-repo-forked") @Model.ForksCount Forks /
                        @Bs.Span().AddCss("octicon", "octicon-history") @Model.CommitCount Commits / 
                        @Bs.Span().AddCss("octicon", "octicon-organization") @Model.ContributorCount Contributors /
                        @Bs.Span().AddCss("octicon", "octicon-issue-opened") @Model.OpenIssuesCount Issues /
                        Added @Model.DbAdded.ToString("d")
                    </text>
                }
                @Bs.Paragraph(@Bs.Strong(Model.Description).ToString())
            }
        }
    }
    using (Bs.Div().AddCss("table-row", "full-height").Begin())
    {
        using (Bs.Div().AddCss("table-cell", "full-height").Begin())
        {
            using (Bs.Div().AddCss("table-div", "full-height").Begin())
            {
                using (Bs.Div().AddCss("table-row", "full-height").Begin())
                {
                    using (Bs.Div().AddCss("table-cell", "full-height", "comments").Begin())
                    {
                        using (Bs.Div().AddCss("relative-wrapper").Begin())
                        {
                            using (Bs.Div().AddCss("scroll-wrapper").Begin())
                            {
                                using (Bs.Div().AddCss("padded-top").Begin())
                                {
                                    for (int c = 0; c < 100; c++)
                                    {
                                        @Bs.Paragraph("comments, comments, comments... " + c)
                                    }
                                }
                            }
                        }
                    }
                    using (Bs.Div().AddCss("table-cell", "full-height", "readme").SetVisibility(Visibility.HiddenMd | Visibility.HiddenSm | Visibility.HiddenXs).Begin())
                    {
                        using (Bs.Div().AddCss("relative-wrapper").Begin())
                        {
                            using (Bs.Div().AddCss("scroll-wrapper").Begin())
                            {
                                using (Bs.Div().AddCss("padded-top").Begin())
                                {
                                    @Html.Raw(Model.ReadmeHtml)
                                }
                            }
                        }
                    }
                }        
            }
        }
    }
}

<script>
    document.title = 'Fork Yeah! - @(Model.Name)';
    showContent();
</script>
